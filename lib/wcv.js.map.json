{
    "version": 3,
    "file": "lib/wcv.js",
    "sources": [
        "tools/node_modules/browserify/node_modules/browser-pack/_prelude.js",
        "lib-src/Column.coffee",
        "lib-src/View.coffee",
        "lib-src/Workspace.coffee",
        "lib-src/wcv-css.coffee",
        "lib-src/wcv.coffee"
    ],
    "names": [],
    "mappings": "AAAA;ACEA;;AAAA,OAAO,QAAQ,QAAR,CAAP;;AAAA,MAGM,CAAC,OAAP,GAAuB;AAGR,kBAAE,EAAF;AACX;AAAA,IADY,IAAC,QACb;AAAA,iBAAa,sKAAb;AAAA,IASA,IAAC,KAAD,GAAa,EAAE,UAAF,CAAc,GAT3B;AAAA,IAUA,IAAC,MAAD,GAAa,EAVb;AAAA,IAWA,IAAC,UAAD,GAAa,KAXb,CADW;EAAA,CAAb;;AAAA,mBAeA,UAAS;AACP;AAAA,WAAW,SAAK,IAAL,CAAX;AAAA,IACA,IAAC,MAAK,CAAC,IAAP,CAAY,IAAZ,CADA;AAAA,IAGA,EAAE,aAAF,EAAiB,IAAC,KAAlB,CAAuB,CAAC,MAAxB,CAA+B,IAAI,CAAC,IAApC,CAHA;AAAA,IAIA,EAAE,aAAF,EAAiB,IAAC,KAAlB,CAAuB,CAAC,MAAxB,CAA+B,EAAE,mCAAF,CAA/B,CAJA;AAMA,WAAO,IAAP,CAPO;EAAA,CAfT;;gBAAA;;IANF;;;;ACCA;;AAAA,MAAM,CAAC,OAAP,GAAuB;AAGR,gBAAE,GAAF;AACX;AAAA,IADY,IAAC,UACb;AAAA,iBAAa,mHAAb;AAAA,IAOA,IAAC,KAAD,GAAa,EAAE,UAAF,CAAc,GAP3B;AAAA,IAQA,IAAC,UAAD,GAAa,KARb,CADW;EAAA,CAAb;;cAAA;;IAHF;;;;ACDA;;AAAA,SAAS,QAAQ,UAAR,CAAT;;AAAA,MAGM,CAAC,OAAP,GAAuB;AAGR;AACX;AAAA,iBAAa,iLAAb;AAAA,IASA,IAAC,KAAD,GAAW,EAAE,UAAF,CAAc,GATzB;AAAA,IAUA,IAAC,QAAD,GAAW,EAVX,CADW;EAAA,CAAb;;AAAA,sBAcA,YAAW;AACT;AAAA,aAAa,WAAO,IAAP,CAAb;AAAA,IACA,IAAC,QAAO,CAAC,IAAT,CAAc,MAAd,CADA;AAAA,IAGA,EAAE,gBAAF,EAAoB,IAAC,KAArB,CAA0B,CAAC,MAA3B,CAAkC,MAAM,CAAC,IAAzC,CAHA;AAAA,IAIA,EAAE,gBAAF,EAAoB,IAAC,KAArB,CAA0B,CAAC,MAA3B,CAAkC,EAAE,qCAAF,CAAlC,CAJA;AAMA,WAAO,MAAP,CAPS;EAAA,CAdX;;mBAAA;;IANF;;;;ACEA,MAAM,CAAC,OAAP,GAAiB,04BAAjB;;;;ACFA;;AAAA,YAAY,QAAQ,aAAR,CAAZ;;AAAA,GAEA,GAAM,OAFN;;AAAA,WAIA,GAAc,KAJd;;AAAA,GAOG,CAAC,eAAJ,GAAsB;AAEpB;AACE,kBAAc,IAAd;AAAA,IACA,WADA,CADF;GAAA;AAIA,SAAO,aAAP,CANoB;AAAA,CAPtB;;AAAA,SAgBA,GAAY;AACV;AAAA,QAAM,QAAQ,WAAR,CAAN;SACA,EAAE,MAAF,CAAS,CAAC,MAAV,CAAkB,YAAQ,GAAR,GAAa,UAA/B,EAFU;AAAA,CAhBZ",
    "sourcesContent": [
        "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
        "# Licensed under the MIT License. See the LICENSE file for details.\n\nView = require \"./View\"\n\n#-------------------------------------------------------------------------------\nmodule.exports = class Column\n\n  #-----------------------------------------------------------------------------\n  constructor: (@ws) ->\n    elemSource = \"\"\"\n      <div class=\"wcv-column-shell\">\n        <div class=\"wcv-column-header\"></div>\n        <div class=\"wcv-column\">\n          <div class=\"wcv-view-edge\"></div>\n        </div>\n      </div>\n    \"\"\"\n\n    @elem      = $(elemSource)[0]\n    @views     = []\n    @collapsed = false\n\n  #-----------------------------------------------------------------------------\n  addView: () ->\n    view = new View @\n    @views.push view\n\n    $(\".wcv-column\", @elem).append view.elem\n    $(\".wcv-column\", @elem).append $(\"<div class='wcv-view-edge'></div>\")\n\n    return view\n",
        "# Licensed under the MIT License. See the LICENSE file for details.\n\n#-------------------------------------------------------------------------------\nmodule.exports = class View\n\n  #-----------------------------------------------------------------------------\n  constructor: (@col) ->\n    elemSource = \"\"\"\n      <div class=\"wcv-view-shell\">\n        <div class=\"wcv-view-header\"></div>\n        <div class=\"wcv-view\"></div>\n      </div>\n    \"\"\"\n\n    @elem      = $(elemSource)[0]\n    @collapsed = false\n",
        "# Licensed under the MIT License. See the LICENSE file for details.\n\nColumn = require \"./Column\"\n\n#-------------------------------------------------------------------------------\nmodule.exports = class Workspace\n\n  #-----------------------------------------------------------------------------\n  constructor: () ->\n    elemSource = \"\"\"\n      <div class=\"wcv-workspace-shell\">\n        <div class=\"wcv-workspace-header\"></div>\n        <div class=\"wcv-workspace\">\n          <div class=\"wcv-column-edge\"></div>\n        </div>\n      </div>\n    \"\"\"\n\n    @elem    = $(elemSource)[0]\n    @columns = []\n\n  #-----------------------------------------------------------------------------\n  addColumn: () ->\n    column = new Column @\n    @columns.push column\n\n    $(\".wcv-workspace\", @elem).append column.elem\n    $(\".wcv-workspace\", @elem).append $(\"<div class='wcv-column-edge'></div>\")\n\n    return column\n",
        "#-----------------------------------------------------------------------------\n# file generated from wcv.css\n#-----------------------------------------------------------------------------\n\nmodule.exports = '''\n/* Licensed under the MIT License. See the LICENSE file for details. */\n\n.wcv-workspace-shell {\n  height:           100%;\n\n  margin:           0;\n}\n\n.wcv-workspace-shell, .wcv-column-shell, .wcv-view-shell {\n  display:          flex;\n  flex-direction:   column;\n  justify-content:  space-around;\n  align-items:      stretch;\n\n  flex:             1 1 0;\n\n  overflow:         hidden;\n}\n\n.wcv-workspace-header, .wcv-column-header, .wcv-view-header {\n  flex:             0 0 auto;\n}\n\n.wcv-column-edge, .wcv-view-edge {\n  flex:             0 0 10px;\n}\n\n.wcv-workspace, .wcv-column {\n  display:          flex;\n  justify-content:  space-around;\n  align-items:      stretch;\n\n  flex:             1 1 0;\n\n  height:           100%;\n}\n\n.wcv-workspace {\n  flex-direction:   row;\n}\n\n.wcv-column {\n  flex-direction:   column;\n}\n\n.wcv-view {\n  flex:             1 1 0;\n}\n\n'''",
        "# Licensed under the MIT License. See the LICENSE file for details.\n\nWorkspace = require \"./Workspace\"\n\nwcv = exports\n\ncssInjected = false\n\n#-------------------------------------------------------------------------------\nwcv.createWorkspace = ->\n\n  unless cssInjected\n    cssInjected = true\n    injectCSS()\n\n  return new Workspace\n\n#-------------------------------------------------------------------------------\ninjectCSS = ->\n  css = require(\"./wcv-css\")\n  $(\"head\").append(\"<style>#{css}</style>\")\n"
    ]
}